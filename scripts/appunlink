#!/bin/bash

# This script searches the given application's directory for
# files and creates links in the appropriate places.  The following
# application directories are recognized:
#
# /bin		-> /System/AppResolve
# /sbin		-> /System/AppResolve
# /lib		-> /System/Libraries
# /share	-> /System/Utilities/Shared
# /etc		-> /System/LegacyConfig
# /include	-> /System/Utilities/Headers
# /man		-> /System/Utilities/Manuals
# /boot		-> /System/Kernel/Boot
# /tmp		-> /System/State/tmp
# /var		-> /System/State
#
# Any paths not recognised will result in an alert to the user.

###### FUNCTIONS #########
function linkfile()
{
        TOTALFILESTOLINK=$[ $TOTALFILESTOLINK + 1 ]
        if [ ! -e "$DESTDIR/$1" ]; then
#		rm $DESTDIR/$1
                echo "ALERT: Destination link $DESTDIR$1 does not exist!"
		echo "       Can not unlink this file."
        else
#        fi
#		echo "$DESTDIR$1"
                rm "$DESTDIR$1" >/dev/null 2>/dev/null
                if [ $? -ne 0 ]; then
			if [ "$f/$i" != "share/man" ] && [ "$f/$i" != "share/info" ] && [ "$f/$i" != "share/locale" ]; then
	                        # Something went wrong.
	                        echo "ALERT: Failed to unlink $APP/Current/$f/$i."
			fi
                else
                        TOTALLINKS=$[ $TOTALLINKS + 1]
                fi
#               echo "LINK:  $APP/$VERSION/$f/$2$1 -> $DESTDIR$1"
        fi
}

###### START SCRIPT ######

# First argument is just the app name
APP="$1"
APPSTORAGE="/System/Utilities/Applications"

# Change the working directory.
_CWD=$(pwd)
cd $APPSTORAGE/$APP

# Automatically detect the version folder.
VERSION="$2"
if [ ! -d $APPSTORAGE/$APP ]; then
        echo "Please provide a valid application version (leave blank for autodetect)!"
        exit 1
elif [ "$APP" == "" ]; then
        for i in *; do
                if [ "$i" != "Current" ]; then
                        VERSION=$i
                fi
        done
fi

echo "Unlinking links for $APP, Version $VERSION..."

# Change working directory again.
cd $APPSTORAGE/$APP/$VERSION

# Now scan the folders
TOTALLINKS=0
TOTALFILESTOLINK=0
for f in *; do
	DESTDIR=""
	case "$f" in
		bin|sbin)
			# Create a link in /System/AppResolve
			DESTDIR="/System/AppResolve/"
			;;
		lib)
			DESTDIR="/System/Libraries/"
			;;
		share)
			DESTDIR="/System/Utilities/Shared/"
			;;
		etc)
			DESTDIR="/System/LegacyConfig/"
			;;
		include)
			DESTDIR="/System/Utilities/Headers/"
			;;
		man)
			DESTDIR="/System/Utilities/Manuals/"
			;;
		boot)
			DESTDIR="/System/Kernel/Boot/"
			;;
		tmp)
			DESTDIR="/System/State/tmp/"
			;;
		var)
			DESTDIR="/System/State/"
			;;
		*)
			# Unknown destination
			echo "ALERT: Unknown folder: $APP/$VERSION/$f!"
			echo "       Files in this folder will not be unlinked."
			continue
			;;
	esac

	# Change working directory.
	cd $f

	for i in *; do
		# SPECIAL CASE: Check for man inside share.
		if [ "$i" == "man" ] && [ "$f" == "share" ]; then
			# Loop through files / folders again
			cd $i
			__DESTDIR=$DESTDIR
			_DESTDIR="/System/Utilities/Manuals/"
			
			for o in *; do
				# o will be man1-8
				DESTDIR="$_DESTDIR"
				for a in $o/*; do
					linkfile $a $i/
				done
			done
			
			DESTDIR=$__DESTDIR
			cd ..
		elif [ "$i" == "pkgconfig" ] && [ "$f" == "lib" ]; then
                        # Loop through files / folders again
                        cd $i
                        __DESTDIR=$DESTDIR
                        _DESTDIR="/System/Libraries/pkgconfig/"

                        #for o in *; do
                        #        # o will be man1-8
                                DESTDIR="$_DESTDIR"
                                for a in *; do
                                        linkfile $a $i/
                                done
                        #done

                        DESTDIR=$__DESTDIR
                        cd ..
		elif ( [ "$i" == "aclocal" ] || [ "$i" == "acmake" ] ) && [ "$f" == "share" ]; then
                        # Loop through files / folders again
                        cd $i
                        __DESTDIR=$DESTDIR
                        _DESTDIR="/System/Utilities/Shared/$i/"

                        #for o in *; do
                        #        # o will be man1-8
                                DESTDIR="$_DESTDIR"
                                for a in *; do
                                        linkfile $a $i/
                                done
                        #done

                        DESTDIR=$__DESTDIR
                        cd ..
		elif [ "$i" == "locale" ] && [ "$f" == "share" ]; then
                        # Loop through files / folders again
                        cd $i
                        __DESTDIR=$DESTDIR
                        _DESTDIR="/System/Utilities/Shared/locale/"

                        for o in *; do
                                # o will be locale name
                                DESTDIR="$_DESTDIR$o/LC_MESSAGES"
				if [ ! -d $DESTDIR ]; then
					mkdir -p $DESTDIR;
				fi
				
				cd $o/LC_MESSAGES
                                for a in *; do
                                        linkfile $a $i/
                                done
				cd ../..
                        done

                        DESTDIR=$__DESTDIR
                        cd ..
		elif [ "$i" == "man1" ] \
                  || [ "$i" == "man2" ] \
                  || [ "$i" == "man3" ] \
                  || [ "$i" == "man4" ] \
                  || [ "$i" == "man5" ] \
                  || [ "$i" == "man6" ] \
                  || [ "$i" == "man7" ] \
                  || [ "$i" == "man8" ]; then
                        # Loop through files / folders again
                        cd $i
                        __DESTDIR=$DESTDIR
                        _DESTDIR="/System/Utilities/Manuals/"

                        DESTDIR="$_DESTDIR$i"
                        for a in *; do
                                linkfile $a $i/
                        done

                        DESTDIR=$__DESTDIR
                        cd ..
		elif [ "$i" == "info" ] && [ "$f" == "share" ]; then
                        # Loop through files / folders again
                        cd $i
                        __DESTDIR=$DESTDIR
                        _DESTDIR="/System/Utilities/Manuals/"

                        DESTDIR="$_DESTDIR"
                        for a in *; do
                                linkfile $a $i/
                        done

                        DESTDIR=$__DESTDIR
                        cd ..
		else
			linkfile $i ""
		fi
	done

	cd ..
done

# Return the user to their original working directory.
cd $_CWD

# Output the results.
echo "$TOTALLINKS of $TOTALFILESTOLINK unlinked successfully."
